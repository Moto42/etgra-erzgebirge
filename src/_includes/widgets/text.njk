{% from "widgets/banners.njk" import headingBanner %}

{# The standard style for body content included via markdown 

    - content: markdown string
    [tailwind prose docs](https://github.com/tailwindlabs/tailwindcss-typography?tab=readme-ov-file)
 #}
{% macro styledMarkdown(content) %}
<div {{oneline-}} 
    class="prose max-w-none
        prose-img:max-w-52 prose-img:float-right prose-img:clear-both
        prose-img:my-2 has-[img]:prose-p:clear-both
        prose-headings:clear-both
        prose-ul:grid prose-ul:grid-cols-[repeat(auto-fit,minmax(25ch,1fr))] prose-ul:gap-2 prose-ul:gap-y-0
    "
{{-endoneline}}>
    {{content | parseMarkdown | safe}}
</div>
{% endmacro %}


{# 
    Renders a list of content items, applying different styles and components based on the item type.

    @param {Array} content - An array of content objects. Each object should have a `type` property that determines how it will be rendered.
        - `type`: A string that can be either 'text' or 'banner'.
        - `text`: A string of markdown content (required if type is 'text').
        - `headinglevel`: An integer representing the heading level (required if type is 'banner').
        - `heading`: A string for the banner heading (required if type is 'banner').
        - `image`: A string URL for the banner image (optional if type is 'banner').

    Example usage:
    {% set content = [
        { type: 'text', text: '# Hello World' },
        { type: 'banner', headinglevel: 2, heading: 'Welcome', image: '/path/to/image.jpg' }
    ] %}
    {{ renderContent(content) }}
#}
{% macro renderContent(content) %}
        <div class="mx-auto w-full max-w-3xl">
        {% for item in content %}
                {% if item.type == 'text' %}
                        {{styledMarkdown(item.text)}}
                {% elseif item.type == 'banner' %}
                        {{headingBanner(item.headinglevel, item.heading, item.image)}}
                {% endif %}
        {% endfor %}
</div>
{% endmacro %}

